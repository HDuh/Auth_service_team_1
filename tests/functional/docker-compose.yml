version: "3.9"

services:
  postgres-test:
    container_name: postgres-test
    image: postgres:${PG_VERSION}-alpine
    restart: always
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    networks:
      - testnetwork

  redis-test:
    container_name: redis-test
    image: redis:${REDIS_VERSION}-alpine
    restart: always
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    volumes:
      - ./redis:/data
    networks:
      - testnetwork

  auth-api-test:
    container_name: flask-auth-api-test
    restart: always
    build:
      context: ../../.
      dockerfile: Dockerfile
    environment:
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - SECRET_KEY=${SECRET_KEY}
      - FLASK_HOST=${FLASK_HOST}
      - API_PORT=${API_PORT}
    networks:
      - testnetwork
    depends_on:
      - postgres-test
      - redis-test

  tests:
    container_name: test
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - API_HOST=${API_HOST}
      - API_PORT=${API_PORT}
    networks:
      - testnetwork
    depends_on:
      - postgres-test
      - redis-test
      - auth-api-test
networks:
  testnetwork:
    driver: bridge

version: "3"

services:
  postgres:
    container_name: postgres
    image: postgres:${PG_VERSION}-alpine
    restart: always
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    networks:
      - apinetwork

  redis:
    container_name: redis
    image: redis:${REDIS_VERSION}-alpine
    restart: always
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    volumes:
      - ./redis:/data
    networks:
      - apinetwork

  nginx:
    container_name: nginx
    image: nginx:${NGINX_VERSION}-alpine
    restart: always
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/configs:/etc/nginx/conf.d:ro
    depends_on:
      - auth-api
    ports:
      - "80:80"
    networks:
      - apinetwork

  auth-api:
    container_name: flask-auth-api
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    env_file: .env
    networks:
      - apinetwork
    depends_on:
      - postgres
      - redis

networks:
  apinetwork:
    driver: bridge
